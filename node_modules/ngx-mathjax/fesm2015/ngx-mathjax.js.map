{"version":3,"file":"ngx-mathjax.js","sources":["../../src/app/math-jax/math-jax.service.ts","../../src/app/math-jax/math-jax.directive.ts","../../src/app/math-jax/math-jax.module.ts","../../ngx-mathjax.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\n\n/**\n * Defines global variables on the `window` object.\n */\ndeclare global {\n  interface Window {\n    /**\n     * Subject to notify the readiness of the MathJax namespace.\n     */\n    mathJaxHub$: Subject<any>;\n  }\n}\n\n/**\n * A internal utility service.\n */\n@Injectable()\nexport class MathJaxService {\n  /**\n   * Signals when the MathJax object is ready.\n   */\n  public readonly MathJaxHub$ = new ReplaySubject<any>();\n\n  /**\n   * Must call `init` method explicitly during module initialization.\n   */\n  public init(): void {\n    /**\n     * Create a global variable.\n     */\n    window.mathJaxHub$ = this.MathJaxHub$;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * @author davidshen84\n */\nimport { UpdateValue } from './domain/interfaces';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  combineLatest,\n  Observable,\n  ReplaySubject,\n  Subject,\n  Subscription,\n} from 'rxjs';\nimport { MathJaxService } from './math-jax.service';\nimport { map } from 'rxjs/operators';\n\n/**\n * Typeset the content or expressions using MathJax library.\n */\n@Directive({\n  selector: 'mathjax, [mathjax]',\n})\nexport class MathJaxDirective implements AfterViewInit, OnChanges, OnDestroy {\n  /**\n   * An array of input MathJax expressions.\n   */\n  @Input('mathjax')\n  public MathJaxExpressions: string[];\n  private readonly mathJaxHub$: Observable<any>;\n  /**\n   * The associated native element.\n   */\n  private readonly element: HTMLElement;\n  /**\n   * Observes the change of the input expression.\n   */\n  private expressionChangeSubject = new ReplaySubject<UpdateValue<string>[]>();\n  /**\n   * Observes the completion of the initial MathJax typesetting.\n   */\n  private readonly mathJaxTypesetSubject = new Subject<any>();\n  private readonly expressionChangeSubscription: Subscription;\n  /**\n   * Observe the readiness of all the Jax instances in the element.\n   */\n  private readonly allJax$: Observable<any[]>;\n  private readonly typesetSubscription: Subscription;\n  private hubSubscription: Subscription;\n  private isDestroying: boolean;\n\n  constructor(el: ElementRef, service: MathJaxService) {\n    this.mathJaxHub$ = service.MathJaxHub$;\n    this.element = el.nativeElement;\n\n    this.typesetSubscription = combineLatest([\n      this.mathJaxHub$,\n      this.mathJaxTypesetSubject,\n    ]).subscribe(() => {\n      MathJax.Hub.Queue(['Typeset', MathJax.Hub, this.element]);\n    });\n\n    this.allJax$ = combineLatest([\n      this.mathJaxHub$,\n      this.mathJaxTypesetSubject,\n    ]).pipe(map(() => MathJax.Hub.getAllJax(this.element)));\n\n    this.expressionChangeSubscription = combineLatest([\n      this.allJax$,\n      this.expressionChangeSubject,\n    ]).subscribe(([jax, updateValue]) =>\n      updateValue.forEach((v) =>\n        MathJax.Hub.Queue(() => {\n          // Stop pushing messages to the queue when the component is being destroyed.\n          if (!this.isDestroying) {\n            return jax[v.order].Text(v.value);\n          }\n        })\n      )\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.hubSubscription = this.mathJaxHub$.subscribe(() => {\n      MathJax.Hub.Queue(['Typeset', MathJax.Hub, this.element]);\n      MathJax.Hub.Queue(['MathJaxTypeset', this]);\n    });\n  }\n\n  /**\n   * Explicitly trigger the MathJax typeset process.\n   *\n   * This is useful if the content is loaded dynamically.\n   */\n  MathJaxTypeset(): void {\n    this.mathJaxTypesetSubject.next();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const expressions = changes.MathJaxExpressions;\n\n    // Shortcut if there's nothing to update.\n    if (!(expressions.currentValue instanceof Array)) {\n      return;\n    }\n\n    // Update only the changed expressions.\n    const updateValues: UpdateValue<string>[] = expressions.currentValue\n      .map((cv, i) =>\n        (expressions.previousValue ? expressions.previousValue[i] !== cv : true)\n          ? {\n              value: expressions.currentValue[i],\n              order: i,\n            }\n          : undefined\n      )\n      .filter((v) => v);\n    this.expressionChangeSubject.next(updateValues);\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroying = true;\n\n    this.expressionChangeSubscription.unsubscribe();\n    this.hubSubscription.unsubscribe();\n    this.typesetSubscription.unsubscribe();\n\n    this.mathJaxTypesetSubject.complete();\n    this.expressionChangeSubject.complete();\n  }\n}\n","/**\n * @author davidshen84\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MathJaxDirective } from './math-jax.directive';\nimport { MathJaxService } from './math-jax.service';\n\n/**\n * Module configuration class.\n *\n * @example\n *\n * {\n *   version: '2.7.5',\n *   config: 'TeX-AMS_HTML',\n *   hostname: 'cdnjs.cloudflare.com'\n * }\n */\nexport class ModuleConfiguration {\n  /**\n   * The version of the MathJax library.\n   */\n  version: string;\n\n  /**\n   * The config name of the MathJax library.\n   * Please check the MathJax [documentation](https://docs.mathjax.org/en/latest/config-files.html) for all the configuration names.\n   */\n  config: string;\n\n  /**\n   * MathJax CDN hostname. Please check [here](https://docs.mathjax.org/en/latest/start.html#mathjax-cdn) for available CDN servers.\n   */\n  hostname: string;\n}\n\n/**\n * Module to load and configure the MathJax library.\n *\n * @example\n *\n * MathJaxModule.config(\n * {\n *     version: '2.7.5',\n *     config: 'TeX-AMS_HTML',\n *     hostname: 'cdnjs.cloudflare.com'\n * })\n */\n@NgModule({\n  declarations: [MathJaxDirective],\n  imports: [CommonModule],\n  exports: [MathJaxDirective],\n})\nexport class MathJaxModule {\n  constructor(service: MathJaxService, moduleConfig?: ModuleConfiguration) {\n    service.init();\n\n    /**\n     * Define the **function string** to be inserted into the mathjax configuration script block.\n     */\n    const mathJaxHubConfig = (() => {\n      MathJax.Hub.Config({\n        skipStartupTypeset: true,\n        messageStyle: 'none',\n        tex2jax: { preview: 'none' },\n      });\n      MathJax.Hub.Register.StartupHook('End', () => {\n        window.mathJaxHub$.next();\n        window.mathJaxHub$.complete();\n      });\n    }).toString();\n\n    if (moduleConfig) {\n      /**\n       * Insert the MathJax configuration script into the Head element.\n       */\n      (function () {\n        const script = document.createElement('script') as HTMLScriptElement;\n        script.type = 'text/x-mathjax-config';\n        script.text = `(${mathJaxHubConfig})();`;\n        document.getElementsByTagName('head')[0].appendChild(script);\n      })();\n\n      /**\n       * Insert the script block to load the MathJax library.\n       */\n      (function (version: string, config: string, hostname: string) {\n        const script = document.createElement('script') as HTMLScriptElement;\n        script.type = 'text/javascript';\n        script.src = `https://${hostname}/ajax/libs/mathjax/${version}/MathJax.js?config=${config}`;\n        script.async = true;\n        document.getElementsByTagName('head')[0].appendChild(script);\n      })(moduleConfig.version, moduleConfig.config, moduleConfig.hostname);\n    }\n  }\n\n  /**\n   * Configure the provider for hte module.\n   *\n   * @deprecated Use forRoot or forChild method instead.\n   * @param {boolean} forRoot Make sure it is set to `true` for the root module and `false` for any child module.\n   * @param {ModuleConfiguration} moduleConfiguration A {ModuleConfiguration} instance.\n   *\n   * @return {ModuleWithproviders<MathJaxModule>} instance\n   */\n  public static config(\n    forRoot = true,\n    moduleConfiguration: ModuleConfiguration = {\n      version: '2.7.5',\n      config: 'TeX-AMS_HTML',\n      hostname: 'cdnjs.cloudflare.com',\n    }\n  ): ModuleWithProviders<MathJaxModule> {\n    return forRoot\n      ? {\n          ngModule: MathJaxModule,\n          providers: [\n            { provide: ModuleConfiguration, useValue: moduleConfiguration },\n            { provide: MathJaxService, useClass: MathJaxService },\n          ],\n        }\n      : {\n          ngModule: MathJaxModule,\n        };\n  }\n\n  /**\n   * Configure the module for the root module.\n   *\n   * @param {ModuleConfiguration} moduleConfiguration configuration\n   *\n   * @return {ModuleWithproviders<MathJaxModule>}\n   */\n  public static forRoot(\n    moduleConfiguration: ModuleConfiguration = {\n      version: '2.7.5',\n      config: 'TeX-AMS_HTML',\n      hostname: 'cdnjs.cloudflare.com',\n    }\n  ): ModuleWithProviders<MathJaxModule> {\n    return {\n      ngModule: MathJaxModule,\n      providers: [\n        { provide: ModuleConfiguration, useValue: moduleConfiguration },\n        { provide: MathJaxService, useClass: MathJaxService },\n      ],\n    };\n  }\n\n  /**\n   * Configure the module for a child module.\n   *\n   * @return {object}\n   */\n  public static forChild(): ModuleWithProviders<MathJaxModule> {\n    return {\n      ngModule: MathJaxModule,\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {MathJaxService as Éµa} from './src/app/math-jax/math-jax.service';"],"names":[],"mappings":";;;;;AAAA;AAgBA;;;MAIa,cAAc;IAD3B;;;;QAKkB,gBAAW,GAAG,IAAI,aAAa,EAAO,CAAC;KAWxD;;;;IANQ,IAAI;;;;QAIT,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;KACvC;;;YAfF,UAAU;;;ACKX;;;MAMa,gBAAgB;IA4B3B,YAAY,EAAc,EAAE,OAAuB;;;;QAd3C,4BAAuB,GAAG,IAAI,aAAa,EAAyB,CAAC;;;;QAI5D,0BAAqB,GAAG,IAAI,OAAO,EAAO,CAAC;QAW1D,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC;QAEhC,IAAI,CAAC,mBAAmB,GAAG,aAAa,CAAC;YACvC,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,qBAAqB;SAC3B,CAAC,CAAC,SAAS,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SAC3D,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;YAC3B,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,qBAAqB;SAC3B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAExD,IAAI,CAAC,4BAA4B,GAAG,aAAa,CAAC;YAChD,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,uBAAuB;SAC7B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,WAAW,CAAC,KAC9B,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;;YAEhB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aACnC;SACF,CAAC,CACH,CACF,CAAC;KACH;IAED,eAAe;QACb,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC;SAC7C,CAAC,CAAC;KACJ;;;;;;IAOD,cAAc;QACZ,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;KACnC;IAED,WAAW,CAAC,OAAsB;QAChC,MAAM,WAAW,GAAG,OAAO,CAAC,kBAAkB,CAAC;;QAG/C,IAAI,EAAE,WAAW,CAAC,YAAY,YAAY,KAAK,CAAC,EAAE;YAChD,OAAO;SACR;;QAGD,MAAM,YAAY,GAA0B,WAAW,CAAC,YAAY;aACjE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,KACT,CAAC,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,IAAI;cACnE;gBACE,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClC,KAAK,EAAE,CAAC;aACT;cACD,SAAS,CACd;aACA,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACjD;IAED,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACnC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QAEvC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC;KACzC;;;YA7GF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;aAC/B;;;YArBC,UAAU;YAaH,cAAc;;;iCAapB,KAAK,SAAC,SAAS;;;AClClB;;;AASA;;;;;;;;;;;MAWa,mBAAmB;CAgB/B;AAED;;;;;;;;;;;;MAiBa,aAAa;IACxB,YAAY,OAAuB,EAAE,YAAkC;QACrE,OAAO,CAAC,IAAI,EAAE,CAAC;;;;QAKf,MAAM,gBAAgB,GAAG,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBACjB,kBAAkB,EAAE,IAAI;gBACxB,YAAY,EAAE,MAAM;gBACpB,OAAO,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;aAC7B,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE;gBACtC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;gBAC1B,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;aAC/B,CAAC,CAAC;SACJ,EAAE,QAAQ,EAAE,CAAC;QAEd,IAAI,YAAY,EAAE;;;;YAIhB,CAAC;gBACC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAsB,CAAC;gBACrE,MAAM,CAAC,IAAI,GAAG,uBAAuB,CAAC;gBACtC,MAAM,CAAC,IAAI,GAAG,IAAI,gBAAgB,MAAM,CAAC;gBACzC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAC9D,GAAG,CAAC;;;;YAKL,CAAC,UAAU,OAAe,EAAE,MAAc,EAAE,QAAgB;gBAC1D,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAsB,CAAC;gBACrE,MAAM,CAAC,IAAI,GAAG,iBAAiB,CAAC;gBAChC,MAAM,CAAC,GAAG,GAAG,WAAW,QAAQ,sBAAsB,OAAO,sBAAsB,MAAM,EAAE,CAAC;gBAC5F,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;gBACpB,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAC9D,EAAE,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC;SACtE;KACF;;;;;;;;;;IAWM,OAAO,MAAM,CAClB,OAAO,GAAG,IAAI,EACd,sBAA2C;QACzC,OAAO,EAAE,OAAO;QAChB,MAAM,EAAE,cAAc;QACtB,QAAQ,EAAE,sBAAsB;KACjC;QAED,OAAO,OAAO;cACV;gBACE,QAAQ,EAAE,aAAa;gBACvB,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,mBAAmB,EAAE;oBAC/D,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,cAAc,EAAE;iBACtD;aACF;cACD;gBACE,QAAQ,EAAE,aAAa;aACxB,CAAC;KACP;;;;;;;;IASM,OAAO,OAAO,CACnB,sBAA2C;QACzC,OAAO,EAAE,OAAO;QAChB,MAAM,EAAE,cAAc;QACtB,QAAQ,EAAE,sBAAsB;KACjC;QAED,OAAO;YACL,QAAQ,EAAE,aAAa;YACvB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,mBAAmB,EAAE;gBAC/D,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,cAAc,EAAE;aACtD;SACF,CAAC;KACH;;;;;;IAOM,OAAO,QAAQ;QACpB,OAAO;YACL,QAAQ,EAAE,aAAa;SACxB,CAAC;KACH;;;YA9GF,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;gBAChC,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,gBAAgB,CAAC;aAC5B;;;YA/CQ,cAAc;YAiD+B,mBAAmB;;;ACxDzE;;;;;;"}